{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721 Note: the ERC-165 identifier for this interface is 0x5b5e139f.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"This emits when the approved address for an NFT is changed or reaffirmed. The zero address indicates there is no approved address. When a Transfer event emits, this also indicates that the approved address for that NFT (if any) is reset to none.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"This emits when an operator is enabled or disabled for an owner. The operator can manage all NFTs of the owner.\"},\"Transfer(address,address,uint256)\":{\"details\":\"This emits when ownership of any NFT changes by any mechanism. This event emits when NFTs are created (`from` == 0) and destroyed (`to` == 0). Exception: during contract creation, any number of NFTs may be created and assigned without emitting Transfer. At the time of any transfer, the approved address for that NFT (if any) is reset to none.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\",\"params\":{\"_approved\":\"The new approved NFT controller\",\"_tokenId\":\"The NFT to approve\"}},\"balanceOf(address)\":{\"details\":\"NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"An address for whom to query the balance\"},\"returns\":{\"_0\":\"The number of NFTs owned by `_owner`, possibly zero\"}},\"getApproved(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_tokenId\":\"The NFT to find the approved address for\"},\"returns\":{\"_0\":\"The approved address for this NFT, or the zero address if there is none\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"The address that acts on behalf of the owner\",\"_owner\":\"The address that owns the NFTs\"},\"returns\":{\"_0\":\"True if `_operator` is an approved operator for `_owner`, false otherwise\"}},\"ownerOf(uint256)\":{\"details\":\"NFTs assigned to zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT\"},\"returns\":{\"_0\":\"The address of the owner of the NFT\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\",\"data\":\"Additional data with no specified format, sent in call to `_to`\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas.\",\"params\":{\"interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise\"}},\"tokenURI(uint256)\":{\"details\":\"Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \\\"ERC721 Metadata JSON Schema\\\".\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.\",\"params\":{\"_from\":\"The current owner of the NFT\",\"_to\":\"The new owner\",\"_tokenId\":\"The NFT to transfer\"}}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Change or reaffirm the approved address for an NFT\"},\"balanceOf(address)\":{\"notice\":\"Count all NFTs assigned to an owner\"},\"getApproved(uint256)\":{\"notice\":\"Get the approved address for a single NFT\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Query if an address is an authorized operator for another address\"},\"name()\":{\"notice\":\"A descriptive name for a collection of NFTs in this contract\"},\"ownerOf(uint256)\":{\"notice\":\"Find the owner of an NFT\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Transfers the ownership of an NFT from one address to another address\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"symbol()\":{\"notice\":\"An abbreviated name for NFTs in this contract\"},\"tokenURI(uint256)\":{\"notice\":\"A distinct Uniform Resource Identifier (URI) for a given asset.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC721.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_approved",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceID",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.",
            "params": {
              "_approved": "The new approved NFT controller",
              "_tokenId": "The NFT to approve"
            }
          },
          "balanceOf(address)": {
            "details": "NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
            "params": {
              "_owner": "An address for whom to query the balance"
            },
            "returns": {
              "_0": "The number of NFTs owned by `_owner`, possibly zero"
            }
          },
          "getApproved(uint256)": {
            "details": "Throws if `_tokenId` is not a valid NFT.",
            "params": {
              "_tokenId": "The NFT to find the approved address for"
            },
            "returns": {
              "_0": "The approved address for this NFT, or the zero address if there is none"
            }
          },
          "isApprovedForAll(address,address)": {
            "params": {
              "_operator": "The address that acts on behalf of the owner",
              "_owner": "The address that owns the NFTs"
            },
            "returns": {
              "_0": "True if `_operator` is an approved operator for `_owner`, false otherwise"
            }
          },
          "ownerOf(uint256)": {
            "details": "NFTs assigned to zero address are considered invalid, and queries about them do throw.",
            "params": {
              "_tokenId": "The identifier for an NFT"
            },
            "returns": {
              "_0": "The address of the owner of the NFT"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\".",
            "params": {
              "_from": "The current owner of the NFT",
              "_to": "The new owner",
              "_tokenId": "The NFT to transfer"
            }
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.",
            "params": {
              "_from": "The current owner of the NFT",
              "_to": "The new owner",
              "_tokenId": "The NFT to transfer",
              "data": "Additional data with no specified format, sent in call to `_to`"
            }
          },
          "setApprovalForAll(address,bool)": {
            "details": "Emits the ApprovalForAll event. The contract MUST allow multiple operators per owner.",
            "params": {
              "_approved": "True if the operator is approved, false to revoke approval",
              "_operator": "Address to add to the set of authorized operators"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas.",
            "params": {
              "interfaceID": "The interface identifier, as specified in ERC-165"
            },
            "returns": {
              "_0": "`true` if the contract implements `interfaceID` and `interfaceID` is not 0xffffffff, `false` otherwise"
            }
          },
          "tokenURI(uint256)": {
            "details": "Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC 3986. The URI may point to a JSON file that conforms to the \"ERC721 Metadata JSON Schema\"."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT.",
            "params": {
              "_from": "The current owner of the NFT",
              "_to": "The new owner",
              "_tokenId": "The NFT to transfer"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "approve(address,uint256)": {
            "notice": "Change or reaffirm the approved address for an NFT"
          },
          "balanceOf(address)": {
            "notice": "Count all NFTs assigned to an owner"
          },
          "getApproved(uint256)": {
            "notice": "Get the approved address for a single NFT"
          },
          "isApprovedForAll(address,address)": {
            "notice": "Query if an address is an authorized operator for another address"
          },
          "name()": {
            "notice": "A descriptive name for a collection of NFTs in this contract"
          },
          "ownerOf(uint256)": {
            "notice": "Find the owner of an NFT"
          },
          "safeTransferFrom(address,address,uint256)": {
            "notice": "Transfers the ownership of an NFT from one address to another address"
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "notice": "Transfers the ownership of an NFT from one address to another address"
          },
          "setApprovalForAll(address,bool)": {
            "notice": "Enable or disable approval for a third party (\"operator\") to manage all of `msg.sender`'s assets"
          },
          "supportsInterface(bytes4)": {
            "notice": "Query if a contract implements an interface"
          },
          "symbol()": {
            "notice": "An abbreviated name for NFTs in this contract"
          },
          "tokenURI(uint256)": {
            "notice": "A distinct Uniform Resource Identifier (URI) for a given asset."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE THEY MAY BE PERMANENTLY LOST"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/forge-std/src/interfaces/IERC721.sol": "IERC721Metadata"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/forge-std/src/interfaces/IERC721.sol",
    "id": 28603,
    "exportedSymbols": {
      "IERC165": [
        28322
      ],
      "IERC721": [
        28534
      ],
      "IERC721Enumerable": [
        28602
      ],
      "IERC721Metadata": [
        28574
      ],
      "IERC721TokenReceiver": [
        28550
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8994:14",
    "nodes": [
      {
        "id": 28420,
        "nodeType": "PragmaDirective",
        "src": "32:24:14",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".2"
        ]
      },
      {
        "id": 28421,
        "nodeType": "ImportDirective",
        "src": "58:23:14",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/interfaces/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28603,
        "sourceUnit": 28323,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28534,
        "nodeType": "ContractDefinition",
        "src": "249:5535:14",
        "nodes": [
          {
            "id": 28433,
            "nodeType": "EventDefinition",
            "src": "673:85:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28425,
              "nodeType": "StructuredDocumentation",
              "src": "284:384:14",
              "text": "@dev This emits when ownership of any NFT changes by any mechanism.\n This event emits when NFTs are created (`from` == 0) and destroyed\n (`to` == 0). Exception: during contract creation, any number of NFTs\n may be created and assigned without emitting Transfer. At the time of\n any transfer, the approved address for that NFT (if any) is reset to none."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "679:8:14",
            "parameters": {
              "id": 28432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28427,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "704:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28433,
                  "src": "688:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28429,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "727:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28433,
                  "src": "711:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28431,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "748:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28433,
                  "src": "732:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "732:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:70:14"
            }
          },
          {
            "id": 28442,
            "nodeType": "EventDefinition",
            "src": "1047:92:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28434,
              "nodeType": "StructuredDocumentation",
              "src": "764:278:14",
              "text": "@dev This emits when the approved address for an NFT is changed or\n reaffirmed. The zero address indicates there is no approved address.\n When a Transfer event emits, this also indicates that the approved\n address for that NFT (if any) is reset to none."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "name": "Approval",
            "nameLocation": "1053:8:14",
            "parameters": {
              "id": 28441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28436,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1078:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28442,
                  "src": "1062:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28438,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1102:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28442,
                  "src": "1086:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1086:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28440,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1129:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28442,
                  "src": "1113:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1113:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:77:14"
            }
          },
          {
            "id": 28451,
            "nodeType": "EventDefinition",
            "src": "1278:88:14",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 28443,
              "nodeType": "StructuredDocumentation",
              "src": "1145:128:14",
              "text": "@dev This emits when an operator is enabled or disabled for an owner.\n The operator can manage all NFTs of the owner."
            },
            "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
            "name": "ApprovalForAll",
            "nameLocation": "1284:14:14",
            "parameters": {
              "id": 28450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28445,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1315:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28451,
                  "src": "1299:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28447,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1339:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28451,
                  "src": "1323:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28449,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1355:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28451,
                  "src": "1350:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28448,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1350:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:67:14"
            }
          },
          {
            "id": 28459,
            "nodeType": "FunctionDefinition",
            "src": "1695:67:14",
            "nodes": [],
            "documentation": {
              "id": 28452,
              "nodeType": "StructuredDocumentation",
              "src": "1372:318:14",
              "text": "@notice Count all NFTs assigned to an owner\n @dev NFTs assigned to the zero address are considered invalid, and this\n function throws for queries about the zero address.\n @param _owner An address for whom to query the balance\n @return The number of NFTs owned by `_owner`, possibly zero"
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1704:9:14",
            "parameters": {
              "id": 28455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28454,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1722:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28459,
                  "src": "1714:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1713:16:14"
            },
            "returnParameters": {
              "id": 28458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28457,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28459,
                  "src": "1753:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:9:14"
            },
            "scope": 28534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28467,
            "nodeType": "FunctionDefinition",
            "src": "2019:67:14",
            "nodes": [],
            "documentation": {
              "id": 28460,
              "nodeType": "StructuredDocumentation",
              "src": "1768:246:14",
              "text": "@notice Find the owner of an NFT\n @dev NFTs assigned to zero address are considered invalid, and queries\n about them do throw.\n @param _tokenId The identifier for an NFT\n @return The address of the owner of the NFT"
            },
            "functionSelector": "6352211e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2028:7:14",
            "parameters": {
              "id": 28463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28462,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2044:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28467,
                  "src": "2036:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2035:18:14"
            },
            "returnParameters": {
              "id": 28466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28467,
                  "src": "2077:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2077:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2076:9:14"
            },
            "scope": 28534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28479,
            "nodeType": "FunctionDefinition",
            "src": "2931:110:14",
            "nodes": [],
            "documentation": {
              "id": 28468,
              "nodeType": "StructuredDocumentation",
              "src": "2092:834:14",
              "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT. When transfer is complete, this function\n checks if `_to` is a smart contract (code size > 0). If so, it calls\n `onERC721Received` on `_to` and throws if the return value is not\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer\n @param data Additional data with no specified format, sent in call to `_to`"
            },
            "functionSelector": "b88d4fde",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "2940:16:14",
            "parameters": {
              "id": 28477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28470,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2965:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28479,
                  "src": "2957:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28472,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2980:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28479,
                  "src": "2972:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28474,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2993:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28479,
                  "src": "2985:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28476,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3018:4:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28479,
                  "src": "3003:19:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28475,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3003:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2956:67:14"
            },
            "returnParameters": {
              "id": 28478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:0:14"
            },
            "scope": 28534,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28489,
            "nodeType": "FunctionDefinition",
            "src": "3399:89:14",
            "nodes": [],
            "documentation": {
              "id": 28480,
              "nodeType": "StructuredDocumentation",
              "src": "3047:347:14",
              "text": "@notice Transfers the ownership of an NFT from one address to another address\n @dev This works identically to the other function with an extra data parameter,\n except this function just sets data to \"\".\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
            },
            "functionSelector": "42842e0e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3408:16:14",
            "parameters": {
              "id": 28487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28482,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3433:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28489,
                  "src": "3425:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3425:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28484,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3448:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28489,
                  "src": "3440:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28486,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3461:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28489,
                  "src": "3453:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3424:46:14"
            },
            "returnParameters": {
              "id": 28488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:0:14"
            },
            "scope": 28534,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28499,
            "nodeType": "FunctionDefinition",
            "src": "4069:85:14",
            "nodes": [],
            "documentation": {
              "id": 28490,
              "nodeType": "StructuredDocumentation",
              "src": "3494:570:14",
              "text": "@notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\n TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\n THEY MAY BE PERMANENTLY LOST\n @dev Throws unless `msg.sender` is the current owner, an authorized\n operator, or the approved address for this NFT. Throws if `_from` is\n not the current owner. Throws if `_to` is the zero address. Throws if\n `_tokenId` is not a valid NFT.\n @param _from The current owner of the NFT\n @param _to The new owner\n @param _tokenId The NFT to transfer"
            },
            "functionSelector": "23b872dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4078:12:14",
            "parameters": {
              "id": 28497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28492,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4099:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28499,
                  "src": "4091:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4091:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28494,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4114:3:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28499,
                  "src": "4106:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4106:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28496,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4127:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28499,
                  "src": "4119:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4090:46:14"
            },
            "returnParameters": {
              "id": 28498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4153:0:14"
            },
            "scope": 28534,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28507,
            "nodeType": "FunctionDefinition",
            "src": "4514:71:14",
            "nodes": [],
            "documentation": {
              "id": 28500,
              "nodeType": "StructuredDocumentation",
              "src": "4160:349:14",
              "text": "@notice Change or reaffirm the approved address for an NFT\n @dev The zero address indicates there is no approved address.\n Throws unless `msg.sender` is the current NFT owner, or an authorized\n operator of the current owner.\n @param _approved The new approved NFT controller\n @param _tokenId The NFT to approve"
            },
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4523:7:14",
            "parameters": {
              "id": 28505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28502,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "4539:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28507,
                  "src": "4531:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28504,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4558:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28507,
                  "src": "4550:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4550:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:37:14"
            },
            "returnParameters": {
              "id": 28506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4584:0:14"
            },
            "scope": 28534,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28515,
            "nodeType": "FunctionDefinition",
            "src": "4978:71:14",
            "nodes": [],
            "documentation": {
              "id": 28508,
              "nodeType": "StructuredDocumentation",
              "src": "4591:382:14",
              "text": "@notice Enable or disable approval for a third party (\"operator\") to manage\n all of `msg.sender`'s assets\n @dev Emits the ApprovalForAll event. The contract MUST allow\n multiple operators per owner.\n @param _operator Address to add to the set of authorized operators\n @param _approved True if the operator is approved, false to revoke approval"
            },
            "functionSelector": "a22cb465",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4987:17:14",
            "parameters": {
              "id": 28513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28510,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5013:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28515,
                  "src": "5005:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5005:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28512,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "5029:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28515,
                  "src": "5024:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28511,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5024:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5004:35:14"
            },
            "returnParameters": {
              "id": 28514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5048:0:14"
            },
            "scope": 28534,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28523,
            "nodeType": "FunctionDefinition",
            "src": "5320:71:14",
            "nodes": [],
            "documentation": {
              "id": 28516,
              "nodeType": "StructuredDocumentation",
              "src": "5055:260:14",
              "text": "@notice Get the approved address for a single NFT\n @dev Throws if `_tokenId` is not a valid NFT.\n @param _tokenId The NFT to find the approved address for\n @return The approved address for this NFT, or the zero address if there is none"
            },
            "functionSelector": "081812fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "5329:11:14",
            "parameters": {
              "id": 28519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28518,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "5349:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28523,
                  "src": "5341:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5341:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5340:18:14"
            },
            "returnParameters": {
              "id": 28522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28523,
                  "src": "5382:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5382:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5381:9:14"
            },
            "scope": 28534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28533,
            "nodeType": "FunctionDefinition",
            "src": "5692:90:14",
            "nodes": [],
            "documentation": {
              "id": 28524,
              "nodeType": "StructuredDocumentation",
              "src": "5397:290:14",
              "text": "@notice Query if an address is an authorized operator for another address\n @param _owner The address that owns the NFTs\n @param _operator The address that acts on behalf of the owner\n @return True if `_operator` is an approved operator for `_owner`, false otherwise"
            },
            "functionSelector": "e985e9c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "5701:16:14",
            "parameters": {
              "id": 28529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28526,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5726:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28533,
                  "src": "5718:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5718:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28528,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "5742:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28533,
                  "src": "5734:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5734:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5717:35:14"
            },
            "returnParameters": {
              "id": 28532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28533,
                  "src": "5776:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28530,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5776:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5775:6:14"
            },
            "scope": 28534,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28423,
              "name": "IERC165",
              "nameLocations": [
                "270:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28322,
              "src": "270:7:14"
            },
            "id": 28424,
            "nodeType": "InheritanceSpecifier",
            "src": "270:7:14"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 28422,
          "nodeType": "StructuredDocumentation",
          "src": "83:166:14",
          "text": "@title ERC-721 Non-Fungible Token Standard\n @dev See https://eips.ethereum.org/EIPS/eip-721\n Note: the ERC-165 identifier for this interface is 0x80ac58cd."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28534,
          28322
        ],
        "name": "IERC721",
        "nameLocation": "259:7:14",
        "scope": 28603,
        "usedErrors": [],
        "usedEvents": [
          28433,
          28442,
          28451
        ]
      },
      {
        "id": 28550,
        "nodeType": "ContractDefinition",
        "src": "5858:942:14",
        "nodes": [
          {
            "id": 28549,
            "nodeType": "FunctionDefinition",
            "src": "6656:142:14",
            "nodes": [],
            "documentation": {
              "id": 28536,
              "nodeType": "StructuredDocumentation",
              "src": "5895:756:14",
              "text": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n after a `transfer`. This function MAY throw to revert and reject the\n transfer. Return of other than the magic value MUST result in the\n transaction being reverted.\n Note: the contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n  unless throwing"
            },
            "functionSelector": "150b7a02",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "6665:16:14",
            "parameters": {
              "id": 28545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28538,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "6690:9:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28549,
                  "src": "6682:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6682:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28540,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "6709:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28549,
                  "src": "6701:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6701:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28542,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6724:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28549,
                  "src": "6716:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6716:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28544,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6749:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28549,
                  "src": "6734:20:14",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 28543,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6734:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6681:74:14"
            },
            "returnParameters": {
              "id": 28548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28549,
                  "src": "6790:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 28546,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6790:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6789:8:14"
            },
            "scope": 28550,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC721TokenReceiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 28535,
          "nodeType": "StructuredDocumentation",
          "src": "5786:72:14",
          "text": "@dev Note: the ERC-165 identifier for this interface is 0x150b7a02."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28550
        ],
        "name": "IERC721TokenReceiver",
        "nameLocation": "5868:20:14",
        "scope": 28603,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 28574,
        "nodeType": "ContractDefinition",
        "src": "6997:659:14",
        "nodes": [
          {
            "id": 28559,
            "nodeType": "FunctionDefinition",
            "src": "7117:60:14",
            "nodes": [],
            "documentation": {
              "id": 28554,
              "nodeType": "StructuredDocumentation",
              "src": "7040:72:14",
              "text": "@notice A descriptive name for a collection of NFTs in this contract"
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "7126:4:14",
            "parameters": {
              "id": 28555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7130:2:14"
            },
            "returnParameters": {
              "id": 28558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28557,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7170:5:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28559,
                  "src": "7156:19:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28556,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7156:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7155:21:14"
            },
            "scope": 28574,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28565,
            "nodeType": "FunctionDefinition",
            "src": "7245:64:14",
            "nodes": [],
            "documentation": {
              "id": 28560,
              "nodeType": "StructuredDocumentation",
              "src": "7183:57:14",
              "text": "@notice An abbreviated name for NFTs in this contract"
            },
            "functionSelector": "95d89b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7254:6:14",
            "parameters": {
              "id": 28561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7260:2:14"
            },
            "returnParameters": {
              "id": 28564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28563,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "7300:7:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28565,
                  "src": "7286:21:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28562,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7286:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7285:23:14"
            },
            "scope": 28574,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28573,
            "nodeType": "FunctionDefinition",
            "src": "7580:74:14",
            "nodes": [],
            "documentation": {
              "id": 28566,
              "nodeType": "StructuredDocumentation",
              "src": "7315:260:14",
              "text": "@notice A distinct Uniform Resource Identifier (URI) for a given asset.\n @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n 3986. The URI may point to a JSON file that conforms to the \"ERC721\n Metadata JSON Schema\"."
            },
            "functionSelector": "c87b56dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7589:8:14",
            "parameters": {
              "id": 28569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28568,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7606:8:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28573,
                  "src": "7598:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7598:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7597:18:14"
            },
            "returnParameters": {
              "id": 28572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28573,
                  "src": "7639:13:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 28570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7639:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7638:15:14"
            },
            "scope": 28574,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28552,
              "name": "IERC721",
              "nameLocations": [
                "7026:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28534,
              "src": "7026:7:14"
            },
            "id": 28553,
            "nodeType": "InheritanceSpecifier",
            "src": "7026:7:14"
          }
        ],
        "canonicalName": "IERC721Metadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 28551,
          "nodeType": "StructuredDocumentation",
          "src": "6802:195:14",
          "text": "@title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n Note: the ERC-165 identifier for this interface is 0x5b5e139f."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28574,
          28534,
          28322
        ],
        "name": "IERC721Metadata",
        "nameLocation": "7007:15:14",
        "scope": 28603,
        "usedErrors": [],
        "usedEvents": [
          28433,
          28442,
          28451
        ]
      },
      {
        "id": 28602,
        "nodeType": "ContractDefinition",
        "src": "7856:1169:14",
        "nodes": [
          {
            "id": 28583,
            "nodeType": "FunctionDefinition",
            "src": "8114:55:14",
            "nodes": [],
            "documentation": {
              "id": 28578,
              "nodeType": "StructuredDocumentation",
              "src": "7901:208:14",
              "text": "@notice Count NFTs tracked by this contract\n @return A count of valid NFTs tracked by this contract, where each one of\n them has an assigned and queryable owner not equal to the zero address"
            },
            "functionSelector": "18160ddd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "8123:11:14",
            "parameters": {
              "id": 28579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8134:2:14"
            },
            "returnParameters": {
              "id": 28582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28583,
                  "src": "8160:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8160:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8159:9:14"
            },
            "scope": 28602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28591,
            "nodeType": "FunctionDefinition",
            "src": "8418:70:14",
            "nodes": [],
            "documentation": {
              "id": 28584,
              "nodeType": "StructuredDocumentation",
              "src": "8175:238:14",
              "text": "@notice Enumerate valid NFTs\n @dev Throws if `_index` >= `totalSupply()`.\n @param _index A counter less than `totalSupply()`\n @return The token identifier for the `_index`th NFT,\n (sort order not specified)"
            },
            "functionSelector": "4f6ccce7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "8427:12:14",
            "parameters": {
              "id": 28587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28586,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "8448:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28591,
                  "src": "8440:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8440:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8439:16:14"
            },
            "returnParameters": {
              "id": 28590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28591,
                  "src": "8479:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8479:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8478:9:14"
            },
            "scope": 28602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28601,
            "nodeType": "FunctionDefinition",
            "src": "8930:93:14",
            "nodes": [],
            "documentation": {
              "id": 28592,
              "nodeType": "StructuredDocumentation",
              "src": "8494:431:14",
              "text": "@notice Enumerate NFTs assigned to an owner\n @dev Throws if `_index` >= `balanceOf(_owner)` or if\n `_owner` is the zero address, representing invalid NFTs.\n @param _owner An address where we are interested in NFTs owned by them\n @param _index A counter less than `balanceOf(_owner)`\n @return The token identifier for the `_index`th NFT assigned to `_owner`,\n (sort order not specified)"
            },
            "functionSelector": "2f745c59",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "8939:19:14",
            "parameters": {
              "id": 28597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28594,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "8967:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28601,
                  "src": "8959:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8959:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28596,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "8983:6:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 28601,
                  "src": "8975:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8975:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8958:32:14"
            },
            "returnParameters": {
              "id": 28600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28599,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28601,
                  "src": "9014:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9013:9:14"
            },
            "scope": 28602,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28576,
              "name": "IERC721",
              "nameLocations": [
                "7887:7:14"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28534,
              "src": "7887:7:14"
            },
            "id": 28577,
            "nodeType": "InheritanceSpecifier",
            "src": "7887:7:14"
          }
        ],
        "canonicalName": "IERC721Enumerable",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 28575,
          "nodeType": "StructuredDocumentation",
          "src": "7658:198:14",
          "text": "@title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721\n Note: the ERC-165 identifier for this interface is 0x780e9d63."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          28602,
          28534,
          28322
        ],
        "name": "IERC721Enumerable",
        "nameLocation": "7866:17:14",
        "scope": 28603,
        "usedErrors": [],
        "usedEvents": [
          28433,
          28442,
          28451
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 14
}